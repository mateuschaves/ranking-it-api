name: Test Coverage Badge

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm i --force --legacy-peer-deps
    
    - name: Run tests with coverage
      run: npm run test:cov
    
    - name: Generate coverage badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: your-gist-id-here
        filename: ranking-it-api-coverage.json
        label: test coverage
        message: ${{ steps.coverage.outputs.coverage }}%
        namedLogo: jest
        color: ${{ steps.coverage.outputs.color }}
        namedLogoColor: white
        style: flat
        cacheSeconds: 300
    
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
        
        # Determine color based on coverage
        if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
          echo "color=brightgreen" >> $GITHUB_OUTPUT
        elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
          echo "color=green" >> $GITHUB_OUTPUT
        elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
          echo "color=yellow" >> $GITHUB_OUTPUT
        elif (( $(echo "$COVERAGE >= 20" | bc -l) )); then
          echo "color=orange" >> $GITHUB_OUTPUT
        else
          echo "color=red" >> $GITHUB_OUTPUT
        fi 